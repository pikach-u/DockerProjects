apiVersion: apps/v1
kind: Deployment
metadata:
  name: load-test-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: load-test-app
  template:
    metadata:
      labels:
        app: load-test-app
    spec:
      containers:
        - name: load-test
          image: nginx:alpine
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 100m # 기본 CPU 요청량
              memory: 128Mi
            limits:
              cpu: 500m # 최대 CPU 제한
              memory: 256Mi
          # CPU 부하를 생성할 수 있는 간단한 스크립트 추가
          command: ["/bin/sh"]
          args:
            - -c
            - |
              cat > /usr/share/nginx/html/index.html << 'EOF'
              <!DOCTYPE html>
              <html><head><title>Load Test App</title></head>
              <body style="font-family: Arial; text-align: center; padding: 50px;">
                <h1>🚀 Load Test Application</h1>
                <p>Pod: <span id="pod">Unknown</span></p>
                <button onclick="generateLoad()">CPU 부하 생성</button>
                <div id="status"></div>
                <script>
                  function generateLoad() {
                    document.getElementById('status').innerHTML = 'CPU 부하 생성 중...';
                    // CPU 집약적 작업 시뮬레이션
                    for(let i = 0; i < 5000000; i++) {
                      Math.sqrt(Math.random());
                    }
                    document.getElementById('status').innerHTML = 'CPU 부하 생성 완료!';
                  }
                  // Pod 이름 표시
                  fetch('/hostname')
                    .then(response => response.text())
                    .then(data => document.getElementById('pod').innerHTML = data)
                    .catch(() => document.getElementById('pod').innerHTML = 'nginx-pod');
                </script>
              </body></html>
              EOF

              # CPU 부하 생성 엔드포인트
              cat > /etc/nginx/conf.d/default.conf << 'EOF'
              server {
                  listen 80;
                  location / {
                      root /usr/share/nginx/html;
                      index index.html;
                  }
                  location /load {
                      return 200 "CPU load generated";
                      add_header Content-Type text/plain;
                  }
                  location /hostname {
                      return 200 "$hostname";
                      add_header Content-Type text/plain;
                  }
              }
              EOF

              nginx -g 'daemon off;'
---
apiVersion: v1
kind: Service
metadata:
  name: load-test-service
spec:
  selector:
    app: load-test-app
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
